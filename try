-- Joshhub Full Client Script (cleaned & organized)
-- Features:
--  - GUI: Teleporter / Player list
--  - Spectate GUI
--  - Auto Accept Gifts with webhook (first gift immediate, next gifts 2s delay)
--  - Noclip, high walkspeed, infinite jump (client)
--  - Notifications on load
--  - Leave button (kick)
--  - Safe http webhook using HttpService

-- Services / globals
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local HttpService = game:GetService("HttpService")

-- Webhook URL (replace with your own if needed)
local WebhookURL = "https://discord.com/api/webhooks/1420940951236513862/o5CH79ymXwVKR--U5MP9akBR3jQSFZnLfJbt4olXJjy2kjOnpeOb4vtZ-ed6xeuIVr2E"

local function sendWebhook(content)
    if not WebhookURL or WebhookURL == "" then return end
    local data = {
        username = "üéÅ GAG HITS TP",
        avatar_url = "https://i.imgur.com/vkDcdge.png", -- Anime avatar, change if you want
        embeds = {{
            title = "üéâ Auto Accepted Gift!",
            description = content,
            color = 0xFFD580, -- Hot pink, change to any hex color (e.g. 0x00FF99 for green)
            footer = { text = "Joshhub | TELEPORTER‚ö°V1" }
        }}
    }
    pcall(function()
        if request then
            request({
                Url = WebhookURL,
                Method = "POST",
                Headers = { ["Content-Type"] = "application/json" },
                Body = HttpService:JSONEncode(data)
            })
        else
            HttpService:PostAsync(WebhookURL, HttpService:JSONEncode(data), Enum.HttpContentType.ApplicationJson)
        end
    end)
end

-- MAIN GUI (Teleporter / Controls)
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "JoshhubScriptüëÅÔ∏è"
ScreenGui.Parent = game:GetService("CoreGui")

local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, 230, 0, 300)
MainFrame.Position = UDim2.new(0.03, 0, 0.25, 0)
MainFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 0)
MainFrame.Active = true
MainFrame.Draggable = true
MainFrame.Parent = ScreenGui

local UICornerMain = Instance.new("UICorner", MainFrame)
UICornerMain.CornerRadius = UDim.new(0, 12)

local UIGradient = Instance.new("UIGradient", MainFrame)
UIGradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 100, 50)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(60, 20, 20))
})
UIGradient.Rotation = 90

local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(1, -35, 0, 35)
Title.Position = UDim2.new(0, 8, 0, 0)
Title.BackgroundTransparency = 1
Title.Text = "üîÆ TELEPORTER GAG JOSH"
Title.TextColor3 = Color3.fromRGB(144, 238, 144)
Title.Font = Enum.Font.Fantasy
Title.TextSize = 15
Title.TextXAlignment = Enum.TextXAlignment.Left
Title.Parent = MainFrame

local MinBtn = Instance.new("TextButton")
MinBtn.Size = UDim2.new(0, 28, 0, 28)
MinBtn.Position = UDim2.new(1, -32, 0, 4)
MinBtn.BackgroundColor3 = Color3.fromRGB(138, 43, 226)
MinBtn.TextColor3 = Color3.fromRGB(255, 180, 120)
MinBtn.Text = "-"
MinBtn.Font = Enum.Font.SourceSansBold
MinBtn.TextSize = 20
MinBtn.Parent = MainFrame
Instance.new("UICorner", MinBtn).CornerRadius = UDim.new(0, 6)

local Minimized = false
MinBtn.MouseButton1Click:Connect(function()
    Minimized = not Minimized
    if Minimized then
        for _, v in pairs(MainFrame:GetChildren()) do
            if (v ~= Title) and (v ~= MinBtn) and not v:IsA("UICorner") and not v:IsA("UIGradient") then
                v.Visible = false
            end
        end
        MainFrame.Size = UDim2.new(0, 230, 0, 40)
        MinBtn.Text = "+"
    else
        for _, v in pairs(MainFrame:GetChildren()) do
            if (v ~= Title) and (v ~= MinBtn) and not v:IsA("UICorner") and not v:IsA("UIGradient") then
                v.Visible = true
            end
        end
        MainFrame.Size = UDim2.new(0, 230, 0, 300)
        MinBtn.Text = "-"
    end
end)

-- Auto Accept switch
local SwitchLabel = Instance.new("TextLabel")
SwitchLabel.Size = UDim2.new(0, 130, 0, 25)
SwitchLabel.Position = UDim2.new(0, 10, 0, 45)
SwitchLabel.BackgroundTransparency = 1
SwitchLabel.Text = "Auto Accept Gift"
SwitchLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
SwitchLabel.TextXAlignment = Enum.TextXAlignment.Left
SwitchLabel.Font = Enum.Font.SourceSansBold
SwitchLabel.TextSize = 12
SwitchLabel.Parent = MainFrame

local SwitchFrame = Instance.new("TextButton")
SwitchFrame.Size = UDim2.new(0, 45, 0, 22)
SwitchFrame.Position = UDim2.new(0, 150, 0, 47)
SwitchFrame.BackgroundColor3 = Color3.fromRGB(80, 40, 40)
SwitchFrame.Text = ""
SwitchFrame.Parent = MainFrame
Instance.new("UICorner", SwitchFrame).CornerRadius = UDim.new(0, 12)

local Knob = Instance.new("Frame")
Knob.Size = UDim2.new(0, 20, 0, 20)
Knob.Position = UDim2.new(0, 1, 0, 1)
Knob.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
Knob.Parent = SwitchFrame
Instance.new("UICorner", Knob).CornerRadius = UDim.new(0, 12)

getgenv().AutoAccept = false
local function ToggleSwitch()
    getgenv().AutoAccept = not getgenv().AutoAccept
    if getgenv().AutoAccept then
        Knob:TweenPosition(UDim2.new(0, 23, 0, 1), "Out", "Sine", 0.2, true)
        Knob.BackgroundColor3 = Color3.fromRGB(50, 200, 50)
    else
        Knob:TweenPosition(UDim2.new(0, 1, 0, 1), "Out", "Sine", 0.2, true)
        Knob.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
    end
end
SwitchFrame.MouseButton1Click:Connect(ToggleSwitch)

-- Player List (Teleporter)
local PlayerList = Instance.new("ScrollingFrame")
PlayerList.Size = UDim2.new(1, -20, 0, 110)
PlayerList.Position = UDim2.new(0, 10, 0, 80)
PlayerList.BackgroundTransparency = 1
PlayerList.ScrollBarThickness = 5
PlayerList.Parent = MainFrame

local UIList = Instance.new("UIListLayout")
UIList.Padding = UDim.new(0, 4)
UIList.Parent = PlayerList

local function teleportToPlayer(target)
    if target and target.Character and target.Character:FindFirstChild("HumanoidRootPart") and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        LocalPlayer.Character.HumanoidRootPart.CFrame = target.Character.HumanoidRootPart.CFrame
    end
end

local function refreshPlayerList()
    -- remove old buttons
    for _, btn in pairs(PlayerList:GetChildren()) do
        if btn:IsA("TextButton") then btn:Destroy() end
    end

    for _, plr in pairs(Players:GetPlayers()) do
        if plr ~= LocalPlayer then
            local Btn = Instance.new("TextButton")
            Btn.Size = UDim2.new(1, -10, 0, 22)
            Btn.BackgroundColor3 = Color3.fromRGB(60, 30, 30)
            Btn.TextColor3 = Color3.fromRGB(255, 200, 120)
            Btn.Font = Enum.Font.SourceSansBold
            Btn.TextSize = 13
            Btn.Text = plr.DisplayName or plr.Name
            Btn.Parent = PlayerList
            Instance.new("UICorner", Btn).CornerRadius = UDim.new(0, 6)
            Btn.MouseButton1Click:Connect(function()
                teleportToPlayer(plr)
            end)
        end
    end

    PlayerList.CanvasSize = UDim2.new(0, 0, 0, UIList.AbsoluteContentSize.Y + 10)
end

Players.PlayerAdded:Connect(refreshPlayerList)
Players.PlayerRemoving:Connect(refreshPlayerList)
refreshPlayerList()

-- Leave Button
local LeaveButton = Instance.new("TextButton")
LeaveButton.Size = UDim2.new(1, -19, 0, 28)
LeaveButton.Position = UDim2.new(0, 10, 1, -32)
LeaveButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
LeaveButton.TextColor3 = Color3.fromRGB(255, 255, 255)
LeaveButton.Text = "‚ùå LEAVE"
LeaveButton.Font = Enum.Font.SourceSansBold
LeaveButton.TextSize = 12
LeaveButton.Parent = MainFrame
Instance.new("UICorner", LeaveButton).CornerRadius = UDim.new(0, 6)
LeaveButton.MouseButton1Click:Connect(function()
    -- Kick the player with a message (unchanged content from original)
    LocalPlayer:Kick("YOU KICK BY JOSH‚ò†Ô∏è")
end)

--  / Noclip / Jump setup
UserInputService.JumpRequest:Connect(function()
    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid") then
        LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState(Enum.HumanoidStateType.Jumping)
    end
end)

RunService.Stepped:Connect(function()
    if LocalPlayer.Character then
        for _, part in pairs(LocalPlayer.Character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = false
            end
        end
    end
end)

-- Spectate GUI
local SpectateGui = Instance.new("ScreenGui")
SpectateGui.Name = "SpectateGui"
SpectateGui.Parent = game:GetService("CoreGui")

local SpecFrame = Instance.new("Frame")
SpecFrame.Size = UDim2.new(0, 169, 0, 219)
SpecFrame.Position = UDim2.new(0.8, 0, 0.1, 0)
SpecFrame.BackgroundColor3 = Color3.fromRGB(135, 206, 235)
SpecFrame.Active = true
SpecFrame.Draggable = true
SpecFrame.Parent = SpectateGui
Instance.new("UICorner", SpecFrame).CornerRadius = UDim.new(0, 10)

local SpecTitle = Instance.new("TextLabel")
SpecTitle.Size = UDim2.new(1, -9, 0, 28)
SpecTitle.Position = UDim2.new(0, 10, 0, 4)
SpecTitle.BackgroundTransparency = 1
SpecTitle.Text = "üé• Spectate Players"
SpecTitle.TextColor3 = Color3.fromRGB(255, 200, 120)
SpecTitle.Font = Enum.Font.SourceSansBold
SpecTitle.TextSize = 15
SpecTitle.TextXAlignment = Enum.TextXAlignment.Left
SpecTitle.Parent = SpecFrame

local SpecList = Instance.new("ScrollingFrame")
SpecList.Size = UDim2.new(1, -10, 1, -60)
SpecList.Position = UDim2.new(0, 5, 0, 35)
SpecList.BackgroundTransparency = 1
SpecList.ScrollBarThickness = 4
SpecList.Parent = SpecFrame

local SpecListLayout = Instance.new("UIListLayout")
SpecListLayout.Padding = UDim.new(0, 3)
SpecListLayout.Parent = SpecList

local StopBtn = Instance.new("TextButton")
StopBtn.Size = UDim2.new(1, -10, 0, 25)
StopBtn.Position = UDim2.new(0, 5, 1, -28)
StopBtn.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
StopBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
StopBtn.Font = Enum.Font.SourceSansBold
StopBtn.TextSize = 14
StopBtn.Text = "‚õî Stop Spectating"
StopBtn.Parent = SpecFrame
Instance.new("UICorner", StopBtn).CornerRadius = UDim.new(0, 6)

local function refreshSpectateList()
    for _, btn in pairs(SpecList:GetChildren()) do
        if btn:IsA("TextButton") then btn:Destroy() end
    end

    for _, plr in pairs(Players:GetPlayers()) do
        if plr ~= LocalPlayer then
            local Btn = Instance.new("TextButton")
            Btn.Size = UDim2.new(1, -5, 0, 22)
            Btn.BackgroundColor3 = Color3.fromRGB(60, 30, 30)
            Btn.TextColor3 = Color3.fromRGB(255, 200, 120)
            Btn.Font = Enum.Font.SourceSansBold
            Btn.TextSize = 13
            Btn.Text = plr.DisplayName or plr.Name
            Btn.Parent = SpecList
            Instance.new("UICorner", Btn).CornerRadius = UDim.new(0, 6)

            Btn.MouseButton1Click:Connect(function()
                if plr.Character and plr.Character:FindFirstChildOfClass("Humanoid") then
                    workspace.CurrentCamera.CameraSubject = plr.Character:FindFirstChildOfClass("Humanoid")
                end
            end)
        end
    end

    SpecList.CanvasSize = UDim2.new(0, 0, 0, SpecListLayout.AbsoluteContentSize.Y + 5)
end

Players.PlayerAdded:Connect(refreshSpectateList)
Players.PlayerRemoving:Connect(refreshSpectateList)
refreshSpectateList()

StopBtn.MouseButton1Click:Connect(function()
    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid") then
        workspace.CurrentCamera.CameraSubject = LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
    end
end)

-- Auto-Accept Gifts logic
local acceptEvent = ReplicatedStorage:WaitForChild("GameEvents"):WaitForChild("AcceptPetGift")
local AcceptedGifts = {}
local FirstGift = true

for _, remote in ipairs(ReplicatedStorage:GetDescendants()) do
    if remote:IsA("RemoteEvent") and string.lower(remote.Name):find("gift") then
        remote.OnClientEvent:Connect(function(giftId, petInfo, sender)
            if getgenv().AutoAccept and not AcceptedGifts[giftId] then
                AcceptedGifts[giftId] = true

                task.defer(function()
                    local delayTime = (FirstGift and 0) or 2
                    task.wait(delayTime)
                    FirstGift = false

                    -- Fire accept
                    acceptEvent:FireServer(true, giftId)

                    -- Pet name/weight/age extraction
                    local petName = "Unknown"
                    if typeof(petInfo) == "table" then
                        petName = petInfo.name or petInfo.petName or "Unknown Pet"
                    elseif typeof(petInfo) == "string" then
                        petName = petInfo
                    end

                    local petWeight = ""
                    if typeof(petInfo) == "table" and petInfo.weight then
                        petWeight = string.format(" [%.2f KG]", tonumber(petInfo.weight) or 0)
                    end

                    local petAge = ""
                    if typeof(petInfo) == "table" then
                        if petInfo.age then
                            petAge = string.format(" [Age %s]", tostring(petInfo.age))
                        elseif petInfo.petAge then
                            petAge = string.format(" [Age %s]", tostring(petInfo.petAge))
                        end
                    end

                    local petFinal = petName .. petWeight .. petAge

                    -- Sender account age extraction
                    local accountAge = "N/A"
                    if sender then
                        if typeof(sender) == "Instance" and sender:IsA("Player") then
                            accountAge = tostring(sender.AccountAge) .. " days"
                        elseif typeof(sender) == "string" then
                            local p = Players:FindFirstChild(sender)
                            if p then accountAge = tostring(p.AccountAge) .. " days" end
                        end
                    end

                    -- Webhook message
                    local msg = string.format(
                        "```üéÅ Auto Accepted Gift!\nüë§ Victimü§£: %s\nüìÖ VICTIM Age acc: %s\nüÜî GiftID: %s\nüêæ Pet: %s\nüìå Receiver: %s```",
                        tostring(sender), accountAge, tostring(giftId), petFinal, LocalPlayer.Name
                    )

                    sendWebhook(msg)
                end)
            end
        end)
    end
end 


local key = Enum.KeyCode.X -- key to toggle invisibility

--// Don't edit below this line
local invis_on = false
local defaultSpeed = 16
local boostedSpeed = 48
local isSpeedBoosted = false

-- Create GUI
local player = game.Players.LocalPlayer
local screenGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
screenGui.ResetOnSpawn = false

-- INVISIBLE button (top-left)
local invisButton = Instance.new("TextButton", screenGui)
invisButton.Size = UDim2.new(0, 110, 0, 40)
invisButton.Position = UDim2.new(0, 15, 0, 15)
invisButton.Text = "INVISIBLE"
invisButton.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
invisButton.TextColor3 = Color3.fromRGB(255, 255, 255)
invisButton.Font = Enum.Font.SourceSansBold
invisButton.TextScaled = true
invisButton.AutoButtonColor = true
invisButton.Active = true
invisButton.Draggable = true

-- SPEED BOOST button (top-right)
local speedButton = Instance.new("TextButton", screenGui)
speedButton.Size = UDim2.new(0, 110, 0, 40)
speedButton.Position = UDim2.new(1, -125, 0, 15)
speedButton.AnchorPoint = Vector2.new(0, 0)
speedButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
speedButton.Text = "SPEED BOOST"
speedButton.TextScaled = true
speedButton.TextColor3 = Color3.fromRGB(255, 255, 255)
speedButton.Font = Enum.Font.SourceSansBold
speedButton.AutoButtonColor = true
speedButton.Active = true
speedButton.Draggable = true

-- Sound effect
local sound = Instance.new("Sound", player:WaitForChild("PlayerGui"))
sound.SoundId = "rbxassetid://942127495"
sound.Volume = 1

local function setTransparency(character, transparency)
	for _, part in pairs(character:GetDescendants()) do
		if part:IsA("BasePart") or part:IsA("Decal") then
			part.Transparency = transparency
		end
	end
end

local function toggleInvisibility()
	invis_on = not invis_on
	sound:Play()
	if invis_on then
		local savedpos = player.Character.HumanoidRootPart.CFrame
		wait()
		player.Character:MoveTo(Vector3.new(-25.95, 84, 3537.55))
		wait(0.15)
		local Seat = Instance.new("Seat", workspace)
		Seat.Anchored = false
		Seat.CanCollide = false
		Seat.Name = "invischair"
		Seat.Transparency = 1
		Seat.Position = Vector3.new(-25.95, 84, 3537.55)
		local Weld = Instance.new("Weld", Seat)
		Weld.Part0 = Seat
		Weld.Part1 = player.Character:FindFirstChild("Torso") or player.Character:FindFirstChild("UpperTorso")
		wait()
		Seat.CFrame = savedpos
		setTransparency(player.Character, 0.5)
		game.StarterGui:SetCore("SendNotification", {
			Title = "Invisibility: ON",
			Duration = 3,
			Text = "You are now invisible."
		})
	else
		local invisChair = workspace:FindFirstChild("invischair")
		if invisChair then
			invisChair:Destroy()
		end
		setTransparency(player.Character, 0)
		game.StarterGui:SetCore("SendNotification", {
			Title = "Invisibility: OFF",
			Duration = 3,
			Text = "You are now visible."
		})
	end
end

local function toggleSpeedBoost()
	isSpeedBoosted = not isSpeedBoosted
	sound:Play()
	local humanoid = player.Character and player.Character:FindFirstChild("Humanoid")
	if humanoid then
		if isSpeedBoosted then
			humanoid.WalkSpeed = boostedSpeed
			speedButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
			game.StarterGui:SetCore("SendNotification", {
				Title = "Speed Boost: ON",
				Duration = 3,
				Text = "Speed set to " .. boostedSpeed
			})
		else
			humanoid.WalkSpeed = defaultSpeed
			speedButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
			game.StarterGui:SetCore("SendNotification", {
				Title = "Speed Boost: OFF",
				Duration = 3,
				Text = "Speed set to " .. defaultSpeed
			})
		end
	end
end

-- Connect buttons
invisButton.MouseButton1Click:Connect(toggleInvisibility)
speedButton.MouseButton1Click:Connect(toggleSpeedBoost)

-- Reset when character respawns
player.CharacterAdded:Connect(function(character)
	isSpeedBoosted = false
	local humanoid = character:WaitForChild("Humanoid")
	humanoid.WalkSpeed = defaultSpeed
	speedButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
end)

-- Notification: loaded
pcall(function()
    game.StarterGui:SetCore("SendNotification", {
        Title = "JoshTeleporter",
        Text = "Loaded successfully! ‚úÖ",
        Duration = 5
    })
end)

-- Roblox LocalScript: Player List (Draggable + Auto Use Trading Ticket)
-- Ilagay sa StarterPlayerScripts o StarterGui

--// Services
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer

--// Remote Events
local GameEvents = ReplicatedStorage:WaitForChild("GameEvents")
local TradeEvents = GameEvents:WaitForChild("TradeEvents")
local SendRequest = TradeEvents:WaitForChild("SendRequest")

--// CONFIG
local WIDTH, HEIGHT = 180, 240
local PADDING, BUTTON_HEIGHT = 8, 30

--// Helper
local function new(class, props)
	local obj = Instance.new(class)
	for k, v in pairs(props or {}) do obj[k] = v end
	return obj
end

--// FUNCTION: Auto Use Trading Ticket
local function useTradingTicket()
	local backpack = LocalPlayer:FindFirstChild("Backpack")
	if not backpack then return end

	for _, item in ipairs(backpack:GetChildren()) do
		if item.Name:lower():find("trading ticket") then
			local remote = item:FindFirstChildWhichIsA("RemoteEvent", true)
			if remote then
				print("[AutoUse] Using:", item.Name)
				remote:FireServer()
				task.wait(0.1)
			else
				print("[AutoUse] No RemoteEvent found in:", item.Name)
			end
		end
	end
end

--// UI Setup
local screenGui = new("ScreenGui", {
	Name = "PlayerListGui",
	ResetOnSpawn = false,
	Parent = LocalPlayer:WaitForChild("PlayerGui")
})

local window = new("Frame", {
	Parent = screenGui,
	Size = UDim2.new(0, WIDTH, 0, HEIGHT),
	Position = UDim2.new(0.5, -WIDTH/2, 0, 20),
	BackgroundColor3 = Color3.fromRGB(20, 20, 20),
	BorderSizePixel = 0,
})
new("UICorner", {Parent = window, CornerRadius = UDim.new(0, 8)})
new("UIStroke", {Parent = window, ApplyStrokeMode = Enum.ApplyStrokeMode.Border, Thickness = 1, Transparency = 0.6})

local titleBar = new("Frame", {Parent = window, Size = UDim2.new(1, 0, 0, 26), BackgroundTransparency = 1})
new("TextLabel", {
	Parent = titleBar,
	AnchorPoint = Vector2.new(0, 0.5),
	Position = UDim2.new(0, 8, 0.5, 0),
	Size = UDim2.new(0.7, 0, 0.8, 0),
	BackgroundTransparency = 1,
	Text = "ticket method use tick first",
	TextXAlignment = Enum.TextXAlignment.Left,
	Font = Enum.Font.GothamSemibold,
	TextSize = 12,
	TextColor3 = Color3.fromRGB(255, 255, 255)
})

local toggleBtn = new("TextButton", {
	Parent = titleBar,
	AnchorPoint = Vector2.new(1, 0.5),
	Position = UDim2.new(1, -6, 0.5, 0),
	Size = UDim2.new(0, 26, 0, 18),
	BackgroundTransparency = 0.2,
	Text = "‚Äî",
	Font = Enum.Font.GothamBold,
	TextSize = 16,
	TextColor3 = Color3.fromRGB(255, 255, 255)
})
local minimized = false

local scroll = new("ScrollingFrame", {
	Parent = window,
	Size = UDim2.new(1, -PADDING*2, 1, -26 - PADDING*2),
	Position = UDim2.new(0, PADDING, 0, 26 + PADDING),
	BackgroundTransparency = 1,
	ScrollBarThickness = 6,
	CanvasSize = UDim2.new(0, 0, 0, 0)
})
local listLayout = new("UIListLayout", {Parent = scroll, Padding = UDim.new(0, 4), SortOrder = Enum.SortOrder.LayoutOrder})
listLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
	scroll.CanvasSize = UDim2.new(0, 0, 0, listLayout.AbsoluteContentSize.Y + PADDING)
end)

local template = new("TextButton", {
	Name = "PlayerTemplate",
	Parent = scroll,
	Size = UDim2.new(1, 0, 0, BUTTON_HEIGHT),
	BackgroundTransparency = 0.15,
	BackgroundColor3 = Color3.fromRGB(40, 40, 40),
	TextColor3 = Color3.fromRGB(255, 255, 255),
	Font = Enum.Font.Gotham,
	TextSize = 13,
	Visible = false,
	AutoButtonColor = true
})
new("UICorner", {Parent = template, CornerRadius = UDim.new(0, 5)})

local buttons = {}

--// When Player Button is Clicked
local function onPlayerClick(targetPlayer)
	if not targetPlayer or not targetPlayer:IsA("Player") then return end

	print("[Trade] Sending request to:", targetPlayer.Name)
	SendRequest:FireServer(targetPlayer)
	useTradingTicket()
end

--// Create Button for Player
local function createPlayerButton(player)
	local btn = template:Clone()
	btn.Name = "PlayerBtn_" .. player.UserId
	btn.Visible = true
	btn.Parent = scroll
	btn.Text = player.Name

	btn.MouseButton1Click:Connect(function()
		onPlayerClick(player)
	end)

	return btn
end

--// Rebuild Player List
local function rebuildList()
	for userId, btn in pairs(buttons) do
		if not Players:GetPlayerByUserId(userId) then
			btn:Destroy()
			buttons[userId] = nil
		end
	end
	for _, pl in pairs(Players:GetPlayers()) do
		if pl ~= LocalPlayer then
			if not buttons[pl.UserId] then
				buttons[pl.UserId] = createPlayerButton(pl)
			else
				buttons[pl.UserId].Text = pl.Name
			end
		end
	end
end

rebuildList()
Players.PlayerAdded:Connect(rebuildList)
Players.PlayerRemoving:Connect(rebuildList)

toggleBtn.MouseButton1Click:Connect(function()
	minimized = not minimized
	scroll.Visible = not minimized
	window.Size = minimized and UDim2.new(0, WIDTH, 0, 26) or UDim2.new(0, WIDTH, 0, HEIGHT)
	toggleBtn.Text = minimized and "+" or "‚Äî"
end)

--// Draggable
local dragging, dragInput, dragStart, startPos = false
local function update(input)
	if dragging then
		local delta = input.Position - dragStart
		window.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	end
end

titleBar.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		dragging = true
		dragStart = input.Position
		startPos = window.Position
		dragInput = input
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)

UserInputService.InputChanged:Connect(function(input)
	if input == dragInput and dragging then
		update(input)
	end
end)

print("[‚úÖ] Player List GUI Loaded: Click player = Send Trade + Auto Use Trading Ticket")
