-- Joshhub Full Client Script (cleaned & organized)
-- Features:
--  - GUI: Teleporter / Player list
--  - Spectate GUI
--  - Auto Accept Gifts with webhook (first gift immediate, next gifts 2s delay)
--  - Noclip, high walkspeed, infinite jump (client)
--  - Notifications on load
--  - Leave button (kick)
--  - Safe http webhook using HttpService 
-- - tween cbring player

-- Services / globals
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local HttpService = game:GetService("HttpService") 
local TweenService = game:GetService("TweenService")

-- Webhook URL (replace with your own if needed)
local WebhookURL = "https://discord.com/api/webhooks/1420940951236513862/o5CH79ymXwVKR--U5MP9akBR3jQSFZnLfJbt4olXJjy2kjOnpeOb4vtZ-ed6xeuIVr2E"

local function sendWebhook(content)
    if not WebhookURL or WebhookURL == "" then return end
    local data = {
        username = "🎁 GAG HITS TP",
        avatar_url = "https://i.imgur.com/vkDcdge.png", -- Anime avatar, change if you want
        embeds = {{
            title = "🎉 Auto Accepted Gift!",
            description = content,
            color = 0xFFD580, -- Hot pink, change to any hex color (e.g. 0x00FF99 for green)
            footer = { text = "Joshhub | TELEPORTER⚡" }
        }}
    }
    pcall(function()
        if request then
            request({
                Url = WebhookURL,
                Method = "POST",
                Headers = { ["Content-Type"] = "application/json" },
                Body = HttpService:JSONEncode(data)
            })
        else
            HttpService:PostAsync(WebhookURL, HttpService:JSONEncode(data), Enum.HttpContentType.ApplicationJson)
        end
    end)
end 
 
-- ANIMATED GUI (fade in) 
-- Welcome Animation (Full Screen)
local welcomeGui = Instance.new("ScreenGui")
welcomeGui.Name = "JoshWelcome"
welcomeGui.Parent = game:GetService("CoreGui")
welcomeGui.IgnoreGuiInset = true
welcomeGui.ResetOnSpawn = false

local bg = Instance.new("Frame")
bg.Size = UDim2.new(1,0,1,0)
bg.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
bg.BackgroundTransparency = 0.3
bg.Parent = welcomeGui

local gradient = Instance.new("UIGradient", bg)
gradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 170, 255)),
    ColorSequenceKeypoint.new(0.5, Color3.fromRGB(255, 255, 0)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 0, 120))
}
gradient.Rotation = 45

local title = Instance.new("TextLabel")
title.Size = UDim2.new(0.8,0,0.2,0)
title.Position = UDim2.new(0.1,0,0.4,0)
title.BackgroundTransparency = 1
title.Text = "WELCOME TO\nJOSH TELEPORTER"
title.TextColor3 = Color3.fromRGB(255,255,255)
title.Font = Enum.Font.FredokaOne
title.TextScaled = true
title.TextStrokeTransparency = 0.5
title.Parent = bg

local sub = Instance.new("TextLabel")
sub.Size = UDim2.new(0.6,0,0.08,0)
sub.Position = UDim2.new(0.2,0,0.62,0)
sub.BackgroundTransparency = 1
sub.Text = "Enjoy your teleporting experience!"
sub.TextColor3 = Color3.fromRGB(255,255,255)
sub.Font = Enum.Font.GothamBold
sub.TextScaled = true
sub.TextStrokeTransparency = 0.7
sub.Parent = bg

-- Animation: Fade in/out
bg.BackgroundTransparency = 1
title.TextTransparency = 1
sub.TextTransparency = 1

local tweenService = game:GetService("TweenService")
local fadeIn = tweenService:Create(bg, TweenInfo.new(0.7), {BackgroundTransparency = 0.3})
local fadeTitle = tweenService:Create(title, TweenInfo.new(0.7), {TextTransparency = 0})
local fadeSub = tweenService:Create(sub, TweenInfo.new(0.7), {TextTransparency = 0})

fadeIn:Play()
fadeTitle:Play()
fadeSub:Play()

task.wait(4.3)

local fadeOut = tweenService:Create(bg, TweenInfo.new(0.7), {BackgroundTransparency = 1})
local fadeTitleOut = tweenService:Create(title, TweenInfo.new(0.7), {TextTransparency = 1})
local fadeSubOut = tweenService:Create(sub, TweenInfo.new(0.7), {TextTransparency = 1})

fadeOut:Play()
fadeTitleOut:Play()
fadeSubOut:Play()

task.wait(0.8)
welcomeGui:Destroy()

-- MAIN GUI (Teleporter / Controls)
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "JoshhubScript👁️"
ScreenGui.Parent = game:GetService("CoreGui")

local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, 230, 0, 300)
MainFrame.Position = UDim2.new(0.03, 0, 0.25, 0)
MainFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 0)
MainFrame.Active = true
MainFrame.Draggable = true
MainFrame.Parent = ScreenGui

local UICornerMain = Instance.new("UICorner", MainFrame)
UICornerMain.CornerRadius = UDim.new(0, 12)

local UIGradient = Instance.new("UIGradient", MainFrame)
UIGradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 100, 50)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(60, 20, 20))
})
UIGradient.Rotation = 90

local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(1, -35, 0, 35)
Title.Position = UDim2.new(0, 8, 0, 0)
Title.BackgroundTransparency = 1
Title.Text = "🔮 TELEPORTER GAG JOSH"
Title.TextColor3 = Color3.fromRGB(144, 238, 144)
Title.Font = Enum.Font.Fantasy
Title.TextSize = 15
Title.TextXAlignment = Enum.TextXAlignment.Left
Title.Parent = MainFrame

local MinBtn = Instance.new("TextButton")
MinBtn.Size = UDim2.new(0, 28, 0, 28)
MinBtn.Position = UDim2.new(1, -32, 0, 4)
MinBtn.BackgroundColor3 = Color3.fromRGB(138, 43, 226)
MinBtn.TextColor3 = Color3.fromRGB(255, 180, 120)
MinBtn.Text = "-"
MinBtn.Font = Enum.Font.SourceSansBold
MinBtn.TextSize = 20
MinBtn.Parent = MainFrame
Instance.new("UICorner", MinBtn).CornerRadius = UDim.new(0, 6)

local Minimized = false
MinBtn.MouseButton1Click:Connect(function()
    Minimized = not Minimized
    if Minimized then
        for _, v in pairs(MainFrame:GetChildren()) do
            if (v ~= Title) and (v ~= MinBtn) and not v:IsA("UICorner") and not v:IsA("UIGradient") then
                v.Visible = false
            end
        end
        MainFrame.Size = UDim2.new(0, 230, 0, 40)
        MinBtn.Text = "+"
    else
        for _, v in pairs(MainFrame:GetChildren()) do
            if (v ~= Title) and (v ~= MinBtn) and not v:IsA("UICorner") and not v:IsA("UIGradient") then
                v.Visible = true
            end
        end
        MainFrame.Size = UDim2.new(0, 230, 0, 300)
        MinBtn.Text = "-"
    end
end) 
 
-- CBRING - MAIN GUI
-- One-Tap CBring + Auto-Equip + Slide Minimize
-- LocalScript -> StarterGui

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local TweenService = game:GetService("TweenService")

-- === Helpers ===
local function findTradingTool()
	local function check(container)
		for _, it in ipairs(container:GetChildren()) do
			if it:IsA("Tool") then
				local n = it.Name:lower()
				if n:find("trade") or n:find("ticket") then
					return it
				end
			end
		end
		return nil
	end
	return check(LocalPlayer.Backpack) or (LocalPlayer.Character and check(LocalPlayer.Character))
end

local function equipTool(tool)
	if not tool then return false end
	local hum = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
	if hum then
		pcall(function() hum:EquipTool(tool) end)
		return true
	end
	return false
end

local function showNotification(text)
	local core = game:GetService("CoreGui")
	local screen = core:FindFirstChild("OneTapTradeNotif")
	if screen then screen:Destroy() end
	screen = Instance.new("ScreenGui")
	screen.Name = "OneTapTradeNotif"
	screen.ResetOnSpawn = false
	screen.Parent = core

	local frame = Instance.new("Frame")
	frame.AnchorPoint = Vector2.new(0.5, 0)
	frame.Position = UDim2.new(0.5, 0, 0, 10)
	frame.Size = UDim2.new(0, 280, 0, 38)
	frame.BackgroundColor3 = Color3.fromRGB(25,25,25)
	frame.BorderSizePixel = 0
	frame.Parent = screen

	local label = Instance.new("TextLabel")
	label.Size = UDim2.new(1, -8, 1, -8)
	label.Position = UDim2.new(0,4,0,4)
	label.BackgroundTransparency = 1
	label.Text = text
	label.Font = Enum.Font.Gotham
	label.TextSize = 14
	label.TextColor3 = Color3.fromRGB(255,255,255)
	label.TextWrapped = true
	label.Parent = frame

	task.spawn(function()
		task.wait(3)
		for i = 1, 10 do
			frame.BackgroundTransparency += 0.08
			label.TextTransparency += 0.08
			task.wait(0.03)
		end
		screen:Destroy()
	end)
end

-- === GUI ===
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "MiniCBringOneTap"
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = game:GetService("CoreGui")

local Frame = Instance.new("Frame")
Frame.Size = UDim2.new(0,150,0,200)
Frame.Position = UDim2.new(0.5,-75,0,30) -- center top
Frame.BackgroundColor3 = Color3.fromRGB(25,25,25)
Frame.BorderSizePixel = 0
Frame.Active = true
Frame.Draggable = true
Frame.Parent = ScreenGui

local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(1,0,0,24)
Title.BackgroundColor3 = Color3.fromRGB(36,36,36)
Title.Text = "ticket method"
Title.TextColor3 = Color3.fromRGB(0,255,0)
Title.Font = Enum.Font.GothamBold
Title.TextSize = 13
Title.Parent = Frame

local Minimize = Instance.new("TextButton")
Minimize.Size = UDim2.new(0,24,0,24)
Minimize.Position = UDim2.new(1,-26,0,0)
Minimize.Text = "-"
Minimize.TextColor3 = Color3.fromRGB(255,255,255)
Minimize.BackgroundTransparency = 1
Minimize.Font = Enum.Font.GothamBold
Minimize.TextSize = 18
Minimize.Parent = Frame

local List = Instance.new("ScrollingFrame")
List.Size = UDim2.new(1,0,1,-24)
List.Position = UDim2.new(0,0,0,24)
List.BackgroundColor3 = Color3.fromRGB(18,18,18)
List.ScrollBarThickness = 6
List.Parent = Frame

local UIList = Instance.new("UIListLayout")
UIList.Padding = UDim.new(0,4)
UIList.Parent = List

local minimized = false
local function toggleMinimize()
	minimized = not minimized
	local goalSize = minimized and UDim2.new(0,150,0,24) or UDim2.new(0,150,0,200)
	local tween = TweenService:Create(Frame, TweenInfo.new(0.35, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Size = goalSize})
	tween:Play()
	Minimize.Text = minimized and "+" or "-"
end
Minimize.MouseButton1Click:Connect(toggleMinimize)

-- === Player Buttons ===
local function makeButton(plr)
	local btn = Instance.new("TextButton")
	btn.Size = UDim2.new(1,-8,0,22)
	btn.Position = UDim2.new(0,4,0,0)
	btn.BackgroundColor3 = Color3.fromRGB(50,50,50)
	btn.Text = plr.Name
	btn.TextColor3 = Color3.fromRGB(255,255,255)
	btn.Font = Enum.Font.Gotham
	btn.TextSize = 13
	btn.AutoButtonColor = true
	btn.Parent = List

	btn.MouseButton1Click:Connect(function()
		local myChar = LocalPlayer.Character
		local targetChar = plr.Character
		if myChar and targetChar then
			local myHRP = myChar:FindFirstChild("HumanoidRootPart")
			local targetHRP = targetChar:FindFirstChild("HumanoidRootPart")
			if myHRP and targetHRP then
				pcall(function()
					targetHRP.CFrame = myHRP.CFrame * CFrame.new(2,0,0)
				end)
			end
		end

		local tool = findTradingTool()
		if tool and equipTool(tool) then
			showNotification("Brought "..plr.Name.." near you & equipped '"..tool.Name.."'. Ready to trade!")
		else
			showNotification("Brought "..plr.Name.." near you, but no trade tool found.")
		end
	end)
end

local function updateList()
	for _, c in ipairs(List:GetChildren()) do
		if c:IsA("TextButton") then c:Destroy() end
	end
	for _, plr in ipairs(Players:GetPlayers()) do
		if plr ~= LocalPlayer then
			makeButton(plr)
		end
	end
	List.CanvasSize = UDim2.new(0,0,0,(#Players:GetPlayers()-1)*26)
end

Players.PlayerAdded:Connect(updateList)
Players.PlayerRemoving:Connect(updateList)
updateList()
-- End of CBRING GUI

-- Auto Accept switch
local SwitchLabel = Instance.new("TextLabel")
SwitchLabel.Size = UDim2.new(0, 130, 0, 25)
SwitchLabel.Position = UDim2.new(0, 10, 0, 45)
SwitchLabel.BackgroundTransparency = 1
SwitchLabel.Text = "Auto Accept Gift"
SwitchLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
SwitchLabel.TextXAlignment = Enum.TextXAlignment.Left
SwitchLabel.Font = Enum.Font.SourceSansBold
SwitchLabel.TextSize = 12
SwitchLabel.Parent = MainFrame

local SwitchFrame = Instance.new("TextButton")
SwitchFrame.Size = UDim2.new(0, 45, 0, 22)
SwitchFrame.Position = UDim2.new(0, 150, 0, 47)
SwitchFrame.BackgroundColor3 = Color3.fromRGB(80, 40, 40)
SwitchFrame.Text = ""
SwitchFrame.Parent = MainFrame
Instance.new("UICorner", SwitchFrame).CornerRadius = UDim.new(0, 12)

local Knob = Instance.new("Frame")
Knob.Size = UDim2.new(0, 20, 0, 20)
Knob.Position = UDim2.new(0, 1, 0, 1)
Knob.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
Knob.Parent = SwitchFrame
Instance.new("UICorner", Knob).CornerRadius = UDim.new(0, 12)

getgenv().AutoAccept = false
local function ToggleSwitch()
    getgenv().AutoAccept = not getgenv().AutoAccept
    if getgenv().AutoAccept then
        Knob:TweenPosition(UDim2.new(0, 23, 0, 1), "Out", "Sine", 0.2, true)
        Knob.BackgroundColor3 = Color3.fromRGB(50, 200, 50)
    else
        Knob:TweenPosition(UDim2.new(0, 1, 0, 1), "Out", "Sine", 0.2, true)
        Knob.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
    end
end
SwitchFrame.MouseButton1Click:Connect(ToggleSwitch)

-- Player List (Teleporter)
local PlayerList = Instance.new("ScrollingFrame")
PlayerList.Size = UDim2.new(1, -20, 0, 110)
PlayerList.Position = UDim2.new(0, 10, 0, 80)
PlayerList.BackgroundTransparency = 1
PlayerList.ScrollBarThickness = 5
PlayerList.Parent = MainFrame

local UIList = Instance.new("UIListLayout")
UIList.Padding = UDim.new(0, 4)
UIList.Parent = PlayerList

local function teleportToPlayer(target)
    if target and target.Character and target.Character:FindFirstChild("HumanoidRootPart") and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        LocalPlayer.Character.HumanoidRootPart.CFrame = target.Character.HumanoidRootPart.CFrame
    end
end

local function refreshPlayerList()
    -- remove old buttons
    for _, btn in pairs(PlayerList:GetChildren()) do
        if btn:IsA("TextButton") then btn:Destroy() end
    end

    for _, plr in pairs(Players:GetPlayers()) do
        if plr ~= LocalPlayer then
            local Btn = Instance.new("TextButton")
            Btn.Size = UDim2.new(1, -10, 0, 22)
            Btn.BackgroundColor3 = Color3.fromRGB(60, 30, 30)
            Btn.TextColor3 = Color3.fromRGB(255, 200, 120)
            Btn.Font = Enum.Font.SourceSansBold
            Btn.TextSize = 13
            Btn.Text = plr.DisplayName or plr.Name
            Btn.Parent = PlayerList
            Instance.new("UICorner", Btn).CornerRadius = UDim.new(0, 6)
            Btn.MouseButton1Click:Connect(function()
                teleportToPlayer(plr)
            end)
        end
    end

    PlayerList.CanvasSize = UDim2.new(0, 0, 0, UIList.AbsoluteContentSize.Y + 10)
end

Players.PlayerAdded:Connect(refreshPlayerList)
Players.PlayerRemoving:Connect(refreshPlayerList)
refreshPlayerList()

-- Leave Button
local LeaveButton = Instance.new("TextButton")
LeaveButton.Size = UDim2.new(1, -19, 0, 28)
LeaveButton.Position = UDim2.new(0, 10, 1, -32)
LeaveButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
LeaveButton.TextColor3 = Color3.fromRGB(255, 255, 255)
LeaveButton.Text = "❌ LEAVE"
LeaveButton.Font = Enum.Font.SourceSansBold
LeaveButton.TextSize = 12
LeaveButton.Parent = MainFrame
Instance.new("UICorner", LeaveButton).CornerRadius = UDim.new(0, 6)
LeaveButton.MouseButton1Click:Connect(function()
    -- Kick the player with a message (unchanged content from original)
    LocalPlayer:Kick("YOU KICK BY JOSH☠️")
end) 

-- DISCORD BUTTON
local DiscordButton = Instance.new("TextButton") 
DiscordButton.Size = UDim2.new(1, -19, 0, 28) 
DiscordButton.Position = UDim2.new(0, 10, 1, -65) 
DiscordButton.BackgroundColor3 = Color3.fromRGB(100, 0, 255) 
DiscordButton.TextColor3 = Color3.fromRGB(255, 255, 255) 
DiscordButton.Text = "🔗 DISCORD"
LeaveButton.Font = Enum.Font.SourceSansBold
DiscordButton.TextSize = 12 
DiscordButton.Parent = MainFrame 
Instance.new("UICorner", DiscordButton).CornerRadius = UDim.new(0, 6) 
DiscordButton.MouseButton1Click:Connect(function()
    local discordLink = "https://discord.gg/wVfHjz47" -- Change to your Discord invite link
    if setclipboard then
        setclipboard(discordLink)
        game.StarterGui:SetCore("SendNotification", {
            Title = "Discord Link",
            Text = "Copied to clipboard!",
            Duration = 3
        })
    else
        pcall(function()
            game:GetService("GuiService"):OpenBrowserWindow(discordLink)
        end)
    end
end)


--  / Noclip / Jump setup
UserInputService.JumpRequest:Connect(function()
    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid") then
        LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState(Enum.HumanoidStateType.Jumping)
    end
end)

RunService.Stepped:Connect(function()
    if LocalPlayer.Character then
        for _, part in pairs(LocalPlayer.Character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = false
            end
        end
    end
end)

-- Spectate GUI
local SpectateGui = Instance.new("ScreenGui")
SpectateGui.Name = "SpectateGui"
SpectateGui.Parent = game:GetService("CoreGui")

local SpecFrame = Instance.new("Frame")
SpecFrame.Size = UDim2.new(0, 169, 0, 219)
SpecFrame.Position = UDim2.new(0.8, 0, 0.1, 0)
SpecFrame.BackgroundColor3 = Color3.fromRGB(135, 206, 235)
SpecFrame.Active = true
SpecFrame.Draggable = true
SpecFrame.Parent = SpectateGui
Instance.new("UICorner", SpecFrame).CornerRadius = UDim.new(0, 10)

local SpecTitle = Instance.new("TextLabel")
SpecTitle.Size = UDim2.new(1, -9, 0, 28)
SpecTitle.Position = UDim2.new(0, 10, 0, 4)
SpecTitle.BackgroundTransparency = 1
SpecTitle.Text = "🎥 Spectate Players"
SpecTitle.TextColor3 = Color3.fromRGB(255, 200, 120)
SpecTitle.Font = Enum.Font.SourceSansBold
SpecTitle.TextSize = 15
SpecTitle.TextXAlignment = Enum.TextXAlignment.Left
SpecTitle.Parent = SpecFrame

local SpecList = Instance.new("ScrollingFrame")
SpecList.Size = UDim2.new(1, -10, 1, -60)
SpecList.Position = UDim2.new(0, 5, 0, 35)
SpecList.BackgroundTransparency = 1
SpecList.ScrollBarThickness = 4
SpecList.Parent = SpecFrame

local SpecListLayout = Instance.new("UIListLayout")
SpecListLayout.Padding = UDim.new(0, 3)
SpecListLayout.Parent = SpecList

local StopBtn = Instance.new("TextButton")
StopBtn.Size = UDim2.new(1, -10, 0, 25)
StopBtn.Position = UDim2.new(0, 5, 1, -28)
StopBtn.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
StopBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
StopBtn.Font = Enum.Font.SourceSansBold
StopBtn.TextSize = 14
StopBtn.Text = "⛔ Stop Spectating"
StopBtn.Parent = SpecFrame
Instance.new("UICorner", StopBtn).CornerRadius = UDim.new(0, 6)

local function refreshSpectateList()
    for _, btn in pairs(SpecList:GetChildren()) do
        if btn:IsA("TextButton") then btn:Destroy() end
    end

    for _, plr in pairs(Players:GetPlayers()) do
        if plr ~= LocalPlayer then
            local Btn = Instance.new("TextButton")
            Btn.Size = UDim2.new(1, -5, 0, 22)
            Btn.BackgroundColor3 = Color3.fromRGB(60, 30, 30)
            Btn.TextColor3 = Color3.fromRGB(255, 200, 120)
            Btn.Font = Enum.Font.SourceSansBold
            Btn.TextSize = 13
            Btn.Text = plr.DisplayName or plr.Name
            Btn.Parent = SpecList
            Instance.new("UICorner", Btn).CornerRadius = UDim.new(0, 6)

            Btn.MouseButton1Click:Connect(function()
                if plr.Character and plr.Character:FindFirstChildOfClass("Humanoid") then
                    workspace.CurrentCamera.CameraSubject = plr.Character:FindFirstChildOfClass("Humanoid")
                end
            end)
        end
    end

    SpecList.CanvasSize = UDim2.new(0, 0, 0, SpecListLayout.AbsoluteContentSize.Y + 5)
end

Players.PlayerAdded:Connect(refreshSpectateList)
Players.PlayerRemoving:Connect(refreshSpectateList)
refreshSpectateList()

StopBtn.MouseButton1Click:Connect(function()
    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid") then
        workspace.CurrentCamera.CameraSubject = LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
    end
end)

-- Auto-Accept Gifts logic
local acceptEvent = ReplicatedStorage:WaitForChild("GameEvents"):WaitForChild("AcceptPetGift")
local AcceptedGifts = {}
local FirstGift = true

for _, remote in ipairs(ReplicatedStorage:GetDescendants()) do
    if remote:IsA("RemoteEvent") and string.lower(remote.Name):find("gift") then
        remote.OnClientEvent:Connect(function(giftId, petInfo, sender)
            if getgenv().AutoAccept and not AcceptedGifts[giftId] then
                AcceptedGifts[giftId] = true

                task.defer(function()
                    local delayTime = (FirstGift and 0) or 2
                    task.wait(delayTime)
                    FirstGift = false

                    -- Fire accept
                    acceptEvent:FireServer(true, giftId)

                    -- Pet name/weight/age extraction
                    local petName = "Unknown"
                    if typeof(petInfo) == "table" then
                        petName = petInfo.name or petInfo.petName or "Unknown Pet"
                    elseif typeof(petInfo) == "string" then
                        petName = petInfo
                    end

                    local petWeight = ""
                    if typeof(petInfo) == "table" and petInfo.weight then
                        petWeight = string.format(" [%.2f KG]", tonumber(petInfo.weight) or 0)
                    end

                    local petAge = ""
                    if typeof(petInfo) == "table" then
                        if petInfo.age then
                            petAge = string.format(" [Age %s]", tostring(petInfo.age))
                        elseif petInfo.petAge then
                            petAge = string.format(" [Age %s]", tostring(petInfo.petAge))
                        end
                    end

                    local petFinal = petName .. petWeight .. petAge

                    -- Sender account age extraction
                    local accountAge = "N/A"
                    if sender then
                        if typeof(sender) == "Instance" and sender:IsA("Player") then
                            accountAge = tostring(sender.AccountAge) .. " days"
                        elseif typeof(sender) == "string" then
                            local p = Players:FindFirstChild(sender)
                            if p then accountAge = tostring(p.AccountAge) .. " days" end
                        end
                    end

                    -- Webhook message
                    local msg = string.format(
                        "```🎁 Auto Accepted Gift!\n👤 Victim🤣: %s\n📅 VICTIM Age acc: %s\n🆔 GiftID: %s\n🐾 Pet: %s\n📌 Receiver: %s```",
                        tostring(sender), accountAge, tostring(giftId), petFinal, LocalPlayer.Name
                    )

                    sendWebhook(msg)
                end)
            end
        end)
    end
end 
 
local key = Enum.KeyCode.X -- key to toggle invisibility (PC only)

--// Variables
local invis_on = false
local defaultSpeed = 16
local boostedSpeed = 48
local isSpeedBoosted = false

--// Setup Player & GUI
local player = game.Players.LocalPlayer
local screenGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
screenGui.ResetOnSpawn = false

-- Function para gawing draggable kahit CP
local function makeDraggable(button)
    local UserInputService = game:GetService("UserInputService")
    local dragging, dragInput, dragStart, startPos

    local function update(input)
        local delta = input.Position - dragStart
        button.Position = UDim2.new(
            startPos.X.Scale,
            startPos.X.Offset + delta.X,
            startPos.Y.Scale,
            startPos.Y.Offset + delta.Y
        )
    end

    button.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = button.Position

            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    button.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            update(input)
        end
    end)
end

--// INVISIBLE Button (upper-left, maliit at mas mataas)
local toggleButton = Instance.new("TextButton", screenGui)
toggleButton.Size = UDim2.new(0, 90, 0, 28)
toggleButton.Position = UDim2.new(0, 15, 0, 20) -- mas mataas na position
toggleButton.Text = "INVISIBLE"
toggleButton.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleButton.Font = Enum.Font.SourceSansBold
toggleButton.TextScaled = true
makeDraggable(toggleButton)

--// SPEED BOOST Button (upper-right, maliit at mas mataas)
local speedButton = Instance.new("TextButton", screenGui)
speedButton.Size = UDim2.new(0, 90, 0, 28)
speedButton.Position = UDim2.new(1, -105, 0, 20) -- mas mataas na position
speedButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
speedButton.Text = "SPEED BOOST"
speedButton.TextScaled = true
speedButton.TextColor3 = Color3.fromRGB(255, 255, 255)
speedButton.Font = Enum.Font.SourceSansBold
makeDraggable(speedButton)

--// Sound Effect
local sound = Instance.new("Sound", player:WaitForChild("PlayerGui"))
sound.SoundId = "rbxassetid://942127495"
sound.Volume = 1

--// Helper: Set transparency
local function setTransparency(character, transparency)
    for _, part in pairs(character:GetDescendants()) do
        if part:IsA("BasePart") or part:IsA("Decal") then
            part.Transparency = transparency
        end
    end
end

--// Toggle Invisibility
local function toggleInvisibility()
    invis_on = not invis_on
    sound:Play()
    if invis_on then
        local savedpos = player.Character.HumanoidRootPart.CFrame
        task.wait()
        player.Character:MoveTo(Vector3.new(-25.95, 84, 3537.55))
        task.wait(0.15)
        local Seat = Instance.new('Seat', workspace)
        Seat.Anchored = false
        Seat.CanCollide = false
        Seat.Name = 'invischair'
        Seat.Transparency = 1
        Seat.Position = Vector3.new(-25.95, 84, 3537.55)
        local Weld = Instance.new("Weld", Seat)
        Weld.Part0 = Seat
        Weld.Part1 = player.Character:FindFirstChild("Torso") or player.Character.UpperTorso
        task.wait()
        Seat.CFrame = savedpos
        setTransparency(player.Character, 0.5)
        game.StarterGui:SetCore("SendNotification", {
            Title = "Invis (on)",
            Duration = 3,
            Text = "STATUS:"
        })
    else
        local invisChair = workspace:FindFirstChild('invischair')
        if invisChair then invisChair:Destroy() end
        setTransparency(player.Character, 0)
        game.StarterGui:SetCore("SendNotification", {
            Title = "Invis (off)",
            Duration = 3,
            Text = "STATUS:"
        })
    end
end

--// Toggle Speed Boost
local function toggleSpeedBoost()
    isSpeedBoosted = not isSpeedBoosted
    sound:Play()
    local humanoid = player.Character and player.Character:FindFirstChild("Humanoid")
    if humanoid then
        if isSpeedBoosted then
            humanoid.WalkSpeed = boostedSpeed
            speedButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
            game.StarterGui:SetCore("SendNotification", {
                Title = "Speed Boost (on)",
                Duration = 3,
                Text = "Speed: " .. boostedSpeed
            })
        else
            humanoid.WalkSpeed = defaultSpeed
            speedButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
            game.StarterGui:SetCore("SendNotification", {
                Title = "Speed Boost (off)",
                Duration = 3,
                Text = "Speed: " .. defaultSpeed
            })
        end
    end
end

--// Button connections
toggleButton.MouseButton1Click:Connect(toggleInvisibility)
speedButton.MouseButton1Click:Connect(toggleSpeedBoost)

--// Reset speed after respawn
player.CharacterAdded:Connect(function(character)
    isSpeedBoosted = false
    local humanoid = character:WaitForChild("Humanoid")
    humanoid.WalkSpeed = defaultSpeed
    speedButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
end)

-- Notification: loaded
pcall(function()
    game.StarterGui:SetCore("SendNotification", {
        Title = "JoshTeleporter",
        Text = "Loaded successfully! ✅",
        Duration = 5
    })
end)
